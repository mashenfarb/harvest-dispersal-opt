import numpy as np

def obj1(x, r11, r22, K11, K22, BB12, BB21, P, c2, C11, C12, CB):
    H1 = (r11*x[0]*(1-(x[0]/K11)) + BB12*(x[2]*x[1]/K22) - BB21*(x[3]*x[0]/K11))
    H2 = (r22*x[1]*(1-(x[1]/K22)) - BB12*(x[2]*x[1]/K22) + BB21*(x[3]*x[0]/K11))

    F = (P*H1 - (C11/x[0])*H1 - c2*(H1**2)/(x[0]**2) - CB*((1-x[2])**2)
       + P*H2 - (C12/x[1])*H2 - c2*(H2**2)/(x[1]**2) - CB*((1-x[3])**2))
    F = 100*F
    negF = -1*F
    return negF


def obj1_hess(x, r11, r22, K11, K22, BB12, BB21, P, c2, C11, C12, CB):
    hess = np.array([
                    [200*BB21**2*c2*x[3]**2/(K11**2*x[1]**2) - 200*C11*(-BB21*x[3]/K11 + r11*(1 - x[0]/K11) - r11*x[0]/K11)/x[0]**2 + 200*C11*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))/x[0]**3 - 200*C11*r11/(K11*x[0]) + 100*c2*(-2*BB21*x[3]/K11 + 2*r11*(1 - x[0]/K11) - 2*r11*x[0]/K11)*(-BB21*x[3]/K11 + r11*(1 - x[0]/K11) - r11*x[0]/K11)/x[0]**2 - 400*c2*(-2*BB21*x[3]/K11 + 2*r11*(1 - x[0]/K11) - 2*r11*x[0]/K11)*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))/x[0]**3 + 600*c2*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))**2/x[0]**4 + 200*P*r11/K11 - 400*c2*r11*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))/(K11*x[0]**2), 200*BB12**2*c2*x[2]**2/(K22**2*x[0]**2) - 200*C12*(-BB12*x[2]/K22 + r22*(1 - x[1]/K22) - r22*x[1]/K22)/x[1]**2 + 200*C12*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/x[1]**3 - 200*C12*r22/(K22*x[1]) + 100*c2*(-2*BB12*x[2]/K22 + 2*r22*(1 - x[1]/K22) - 2*r22*x[1]/K22)*(-BB12*x[2]/K22 + r22*(1 - x[1]/K22) - r22*x[1]/K22)/x[1]**2 - 400*c2*(-2*BB12*x[2]/K22 + 2*r22*(1 - x[1]/K22) - 2*r22*x[1]/K22)*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/x[1]**3 + 600*c2*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))**2/x[1]**4 + 200*P*r22/K22 - 400*c2*r22*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/(K22*x[1]**2), 200*BB12**2*c2/K22**2 + 200*BB12**2*c2*x[1]**2/(K22**2*x[0]**2) + 200*CB, 200*BB21**2*c2*x[0]**2/(K11**2*x[1]**2) + 200*BB21**2*c2/K11**2 + 200*CB, 0, 0, 0, 0, 0, 0, 0, 0],
                    [-100*BB12*C11*x[2]/(K22*x[0]**2) + 100*BB12*c2*x[2]*(-2*BB21*x[3]/K11 + 2*r11*(1 - x[0]/K11) - 2*r11*x[0]/K11)/(K22*x[0]**2) - 400*BB12*c2*x[2]*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))/(K22*x[0]**3) - 100*BB21*C12*x[3]/(K11*x[1]**2) + 200*BB21*c2*x[3]*(-BB12*x[2]/K22 + r22*(1 - x[1]/K22) - r22*x[1]/K22)/(K11*x[1]**2) - 400*BB21*c2*x[3]*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/(K11*x[1]**3), 200*BB12**2*c2*x[2]**2/(K22**2*x[0]**2) - 200*C12*(-BB12*x[2]/K22 + r22*(1 - x[1]/K22) - r22*x[1]/K22)/x[1]**2 + 200*C12*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/x[1]**3 - 200*C12*r22/(K22*x[1]) + 100*c2*(-2*BB12*x[2]/K22 + 2*r22*(1 - x[1]/K22) - 2*r22*x[1]/K22)*(-BB12*x[2]/K22 + r22*(1 - x[1]/K22) - r22*x[1]/K22)/x[1]**2 - 400*c2*(-2*BB12*x[2]/K22 + 2*r22*(1 - x[1]/K22) - 2*r22*x[1]/K22)*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/x[1]**3 + 600*c2*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))**2/x[1]**4 + 200*P*r22/K22 - 400*c2*r22*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/(K22*x[1]**2), 200*BB12**2*c2*x[1]*x[2]/(K22**2*x[0]**2) + 100*BB12*C11/(K22*x[0]) - 200*BB12*c2*(-BB12*x[2]/K22 + r22*(1 - x[1]/K22) - r22*x[1]/K22)/(K22*x[1]) + 200*BB12*c2*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/(K22*x[1]**2) + 200*BB12*c2*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))/(K22*x[0]**2), -200*BB12*BB21*c2*x[2]/(K11*K22*x[0]) - 100*BB21*C12*x[0]/(K11*x[1]**2) + 200*BB21*c2*x[0]*(-BB12*x[2]/K22 + r22*(1 - x[1]/K22) - r22*x[1]/K22)/(K11*x[1]**2) - 400*BB21*c2*x[0]*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/(K11*x[1]**3), 0, 0, 0, 0, 0, 0, 0, 0],
                    [-200*BB12*BB21*c2*x[3]/(K11*K22*x[1]) - 100*BB12*C11*x[1]/(K22*x[0]**2) + 100*BB12*c2*x[1]*(-2*BB21*x[3]/K11 + 2*r11*(1 - x[0]/K11) - 2*r11*x[0]/K11)/(K22*x[0]**2) - 400*BB12*c2*x[1]*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))/(K22*x[0]**3), 200*BB12**2*c2*x[1]*x[2]/(K22**2*x[0]**2) + 100*BB12*C11/(K22*x[0]) - 100*BB12*c2*(-2*BB12*x[2]/K22 + 2*r22*(1 - x[1]/K22) - 2*r22*x[1]/K22)/(K22*x[1]) + 200*BB12*c2*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/(K22*x[1]**2) + 200*BB12*c2*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))/(K22*x[0]**2), 200*BB12**2*c2/K22**2 + 200*BB12**2*c2*x[1]**2/(K22**2*x[0]**2) + 200*CB, -200*BB12*BB21*c2*x[0]/(K11*K22*x[1]) - 200*BB12*BB21*c2*x[1]/(K11*K22*x[0]), 0, 0, 0, 0, 0, 0, 0, 0],
                    [200*BB21**2*c2*x[0]*x[3]/(K11**2*x[1]**2) + 100*BB21*C12/(K11*x[1]) + 200*BB21*c2*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/(K11*x[1]**2) - 100*BB21*c2*(-2*BB21*x[3]/K11 + 2*r11*(1 - x[0]/K11) - 2*r11*x[0]/K11)/(K11*x[0]) + 200*BB21*c2*(BB12*x[1]*x[2]/K22 - BB21*x[0]*x[3]/K11 + r11*x[0]*(1 - x[0]/K11))/(K11*x[0]**2), -200*BB12*BB21*c2*x[2]/(K11*K22*x[0]) - 100*BB21*C12*x[0]/(K11*x[1]**2) + 100*BB21*c2*x[0]*(-2*BB12*x[2]/K22 + 2*r22*(1 - x[1]/K22) - 2*r22*x[1]/K22)/(K11*x[1]**2) - 400*BB21*c2*x[0]*(-BB12*x[1]*x[2]/K22 + BB21*x[0]*x[3]/K11 + r22*x[1]*(1 - x[1]/K22))/(K11*x[1]**3), -200*BB12*BB21*c2*x[0]/(K11*K22*x[1]) - 200*BB12*BB21*c2*x[1]/(K11*K22*x[0]), 200*BB21**2*c2*x[0]**2/(K11**2*x[1]**2) + 200*BB21**2*c2/K11**2 + 200*CB, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
                    )
    return


def obj2(x, r11, r22, K11, K22, BB12, BB21, P, c2, C11, C12, CB):
    H1 = (r11*x[0]*(1-(x[0]/K11)) + BB12*(x[2]*x[1]/K22) - BB21*(x[2]*x[0]/K11))
    H2 = (r22*x[1]*(1-(x[1]/K22)) - BB12*(x[2]*x[1]/K22) + BB21*(x[2]*x[0]/K11))

    F = (P*H1 - (C11/x[0])*H1 - c2*(H1**2)/(x[0]**2) - 2*CB*((1-x[2])**2) +
         P*H2 - (C12/x[1])*H2 - c2*(H2**2)/(x[1]**2))
    F = 100*F
    negF = -1*F
    return negF


def obj3(x, R, K, B, P, C11, C12, c2):
    H1 = R*x[0]*(1-(x[0]/K)) + B*(x[1]/K) - B*(x[0]/K)
    H2 = R*x[1]*(1-(x[1]/K)) - B*(x[1]/K) + B*(x[0]/K)

    F = (P*H1 - (C11/x[0])*H1 - c2*(H1**2)/(x[0]**2)
         + P*H2 - (C12/x[1])*H2 - c2*(H2**2)/(x[1]**2))
    F = 100*F
    negF = -1*F
    return negF
